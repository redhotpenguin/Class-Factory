Revision history for Perl extension Class::Factory.

1.01  Thu Aug 21 22:08:29 EDT 2003

      - add_factory_type() checks %INC to see if a class is already
      loaded. This gets rid of any 'Subroutine foo redefined' messages
      you might see if warnings are turned on.

      - All log/error messages now have variables in apostrophes
      rather than brackes. So:

        "Class [$class] not found"

      becomes:

        "Class '$class' not found"

      It's just cleaner that way.

1.00  Mon Oct  7 11:15:50 EDT 2002

      - Add overridable logging/errors (Thanks to Eric Andreychek
      <eric@openthought.net>)

      - Subclasses do not need to implement any methods any longer --
      using the module is a simple 'use base qw( Class::Factory )'
      away. (Thanks to Eric for the suggestion.)

      - Add get_loaded_types(), get_loaded_classes(),
      get_registered_types() and get_registered_classes() so you can
      keep track of the factory state.

0.03  Sun Feb 10 13:00:20 EST 2002

      Added the ability to register a type/class without having
      Class::Factory include it. This is useful for modules that want
      to know all of their types at startup time but don't want to
      bring in a particular class until that type is requested. (See
      POD for details.)

0.02  Wed Jan 30 00:22:58 EST 2002

      Added simple constructor to be inherited as needed. This
      constructor automatically calls 'init()', not coincidentally the
      name that Class::Base uses. Small variable name changes.

0.01  Mon Jan 28 08:35:09 EST 2002
	
      Original version with tests, documentation and everything,
      written after the third or fourth time I cut-and-pasted a
      'add_type()' method to implement a dynamic factory class :-)

